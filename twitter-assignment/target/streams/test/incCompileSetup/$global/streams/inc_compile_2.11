format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> E:\scala\twitter-assignment\target\scala-2.11\test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.11.8
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
4 items
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> E:\scala\twitter-assignment\target\scala-2.11\test-classes\TweetsTest$$anonfun$1.class
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> E:\scala\twitter-assignment\target\scala-2.11\test-classes\TweetsTest$$anonfun$2.class
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> E:\scala\twitter-assignment\target\scala-2.11\test-classes\TweetsTest$$anonfun$3.class
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> E:\scala\twitter-assignment\target\scala-2.11\test-classes\TweetsTest.class
binary dependencies:
3 items
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> C:\Users\Nitin Aggarwal\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.8.jar
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> C:\Users\Nitin Aggarwal\.ivy2\cache\org.scalactic\scalactic_2.11\bundles\scalactic_2.11-3.0.1.jar
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> C:\Users\Nitin Aggarwal\.ivy2\cache\org.scalatest\scalatest_2.11\bundles\scalatest_2.11-3.0.1.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
2 items
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> LikesAndRetweets
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Tweets
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
4 items
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> TweetsTest
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> TweetsTest$$anonfun$1
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> TweetsTest$$anonfun$2
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> TweetsTest$$anonfun$3
used names:
56 items
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> $org_scalatest_assert_macro_expr
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> $org_scalatest_assert_macro_left
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> $org_scalatest_assert_macro_right
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> <byname>
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> <init>
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> <repeated>
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> ==
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> >
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Any
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Assertion
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> AssertionsHelper
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Await
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Awaitable
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Bool
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Boolean
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Double
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Duration
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> DurationInt
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> FiniteDuration
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> FunSuite
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Future
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Int
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> LikesAndRetweets
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> List
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Nothing
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Position
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Predef
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Prettifier
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> String
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> T
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Tag
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Tweets
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> TweetsTest
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> Unit
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> assert
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> assertionsHelper
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> binaryMacroBool
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> concurrent
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> countTweets
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> default
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> duration
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> getAverageLikesAndRetweets
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> getLikesAndReTweets
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> here
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> macroAssert
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> org
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> package
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> result
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> scala
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> scalactic
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> scalatest
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> seconds
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> size
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> source
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> test
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> tweets
product stamps:
4 items
E:\scala\twitter-assignment\target\scala-2.11\test-classes\TweetsTest$$anonfun$1.class -> lastModified(1486355874282)
E:\scala\twitter-assignment\target\scala-2.11\test-classes\TweetsTest$$anonfun$2.class -> lastModified(1486355874298)
E:\scala\twitter-assignment\target\scala-2.11\test-classes\TweetsTest$$anonfun$3.class -> lastModified(1486355874298)
E:\scala\twitter-assignment\target\scala-2.11\test-classes\TweetsTest.class -> lastModified(1486355874267)
source stamps:
1 items
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> hash(803c4b780af36b9a622c8744ea161184ae705280)
binary stamps:
3 items
C:\Users\Nitin Aggarwal\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.8.jar -> lastModified(1457105192000)
C:\Users\Nitin Aggarwal\.ivy2\cache\org.scalactic\scalactic_2.11\bundles\scalactic_2.11-3.0.1.jar -> lastModified(1478750001000)
C:\Users\Nitin Aggarwal\.ivy2\cache\org.scalatest\scalatest_2.11\bundles\scalatest_2.11-3.0.1.jar -> lastModified(1478750160000)
class names:
3 items
C:\Users\Nitin Aggarwal\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.8.jar -> scala.concurrent.Await$
C:\Users\Nitin Aggarwal\.ivy2\cache\org.scalactic\scalactic_2.11\bundles\scalactic_2.11-3.0.1.jar -> org.scalactic.Prettifier
C:\Users\Nitin Aggarwal\.ivy2\cache\org.scalatest\scalatest_2.11\bundles\scalatest_2.11-3.0.1.jar -> org.scalatest.FunSuite
internal apis:
1 items
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwXTzGOgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAJzcgAgeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2hbDvUidjhXzwIAAkkABGhhc2hMAARuYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHAbQC4kdAAVdW5jb25zdHJhaW5lZEVxdWFsaXR5c3EAfgAL1zjdL3QAEmNvbnZlcnRUb0VxdWFsaXplcnVxAH4ACQAAAGRzcQB+AAseQvmPdAAGYXNzZXJ0c3EAfgALK7pcn3QAB3N1Y2NlZWRzcQB+AAtrH9/tdAAGbm90aWZ5c3EAfgALp5BH33QAJmxvd1ByaW9yaXR5Q29udmVyc2lvbkNoZWNrZWRDb25zdHJhaW50c3EAfgALcMfbfHQAEEFzc2VydGlvbnNIZWxwZXJzcQB+AAtNji7OdAAGY2FuY2Vsc3EAfgALXCNjlXQABHRlc3RzcQB+AAvG8oeAdAARZXhlY3V0ZSRkZWZhdWx0JDJzcQB+AAudL6kJdAAJaW50ZXJjZXB0c3EAfgALVm/vcXQABGZhaWxzcQB+AAt/RWm+dAAEbmFtZXNxAH4AC6q1ZIV0ABRhc3NlcnREb2VzTm90Q29tcGlsZXNxAH4AC2TTDeJ0ABFleGVjdXRlJGRlZmF1bHQkNHNxAH4AC6V7EHp0AAdleGVjdXRlc3EAfgALlAteIXQABHdhaXRzcQB+AAvEyaFJdAALdGVzdERhdGFGb3JzcQB+AAv1rAvEdAATY3JlYXRlQ2F0Y2hSZXBvcnRlcnNxAH4AC5PYKot0AAlzdHlsZU5hbWVzcQB+AAttJT6OdAANJGFzSW5zdGFuY2VPZnNxAH4AC5w30y90ABFleGVjdXRlJGRlZmF1bHQkM3NxAH4ACz7hDi50AAljb25maWdNYXBzcQB+AAvhjwJQdAAGZXF1YWxzc3EAfgAL5XkzIXQALGNvbnZlcnRFcXVpdmFsZW5jZVRvQVRvQkNvbnZlcnNpb25Db25zdHJhaW50c3EAfgALL/7ETXQAD2RlZmF1bHRFcXVhbGl0eXNxAH4AC0IPZkR0ACJjb252ZXJ0RXF1aXZhbGVuY2VUb0FUb0JDb25zdHJhaW50c3EAfgALsy6GBnQABHRhZ3NzcQB+AAv0msg4dAAMYXNJbnN0YW5jZU9mc3EAfgALkc9VYXQABWFsZXJ0c3EAfgALxN48yHQAA3J1bnNxAH4AC0UgzWt0AAZzY29wZXNzcQB+AAusuaWLdAADcG9zc3EAfgALXD2HJ3QADHN5bmNocm9uaXplZHNxAH4AC+syge10AA5hc3NlcnRDb21waWxlc3NxAH4AC+QSKfd0AAxhc3NlcnRUaHJvd3NzcQB+AAv127SydAANJGlzSW5zdGFuY2VPZnNxAH4AC26XRWZ0AAR0cmFwc3EAfgALLlhbl3QAFXRlc3REYXRhRm9yJGRlZmF1bHQkMnNxAH4AC5Q8ylF0AAxhc3NlcnRSZXN1bHRzcQB+AAumd56adAAEdGV4dHNxAH4AC8kmnQt0ACxjb252ZXJ0RXF1aXZhbGVuY2VUb0JUb0FDb252ZXJzaW9uQ29uc3RyYWludHNxAH4ACxGKc2N0ABFleGVjdXRlJGRlZmF1bHQkN3NxAH4AC6zWcRZ0ABV0eXBlQ2hlY2tlZENvbnN0cmFpbnRzcQB+AAvxUCwHdAADIT09c3EAfgAL6csGmXQABGluZm9zcQB+AAtD0JskdAAJbm90aWZ5QWxsc3EAfgAL709XXHQAC3dpdGhGaXh0dXJlc3EAfgALdOggX3QAB3J1blRlc3RzcQB+AAuNQDn/dAAMaXNJbnN0YW5jZU9mc3EAfgALHAnEAnQACHdpdGhDbHVlc3EAfgALbp9KxHQAEGFzc2VydGlvbnNIZWxwZXJzcQB+AAu3jxWVdAARZXhlY3V0ZSRkZWZhdWx0JDZzcQB+AAs3UURhdAAPYXNzZXJ0VHlwZUVycm9yc3EAfgALLVvs+HQABm1hcmt1cHNxAH4ACyhekMF0AAhsZWZ0U2lkZXNxAH4ACxwQ6iF0AAY8aW5pdD5zcQB+AAs7QhsCdAALbWFjcm9Bc3N1bWVzcQB+AAvDbhl4dAAPcnVuTmVzdGVkU3VpdGVzc3EAfgALgF4vk3QABWFwcGx5c3EAfgALZQ9FTnQACUVxdWFsaXplcnNxAH4ACzM3BTV0ABtuZXdBc3NlcnRpb25GYWlsZWRFeGNlcHRpb25zcQB+AAtWBAeEdAAEbm90ZXNxAH4AC+tU1I10AAI9PXNxAH4ACzfF9dh0AAVjbG9uZXNxAH4AC0AwDvV0AAxuZXN0ZWRTdWl0ZXNzcQB+AAs6d/PmdAAGYXNzdW1lc3EAfgALSC/UF3QABiRpbml0JHNxAH4AC1XcP010ACBsb3dQcmlvcml0eVR5cGVDaGVja2VkQ29uc3RyYWludHNxAH4AC1fcVp10AAxyZWdpc3RlclRlc3RzcQB+AAvmsJPMdAARZXhlY3V0ZSRkZWZhdWx0JDVzcQB+AAtMfeIRdAADPT09c3EAfgALobWe/XQAGG5ld1Rlc3RDYW5jZWxlZEV4Y2VwdGlvbnNxAH4AC5ya1T10AAh0b1N0cmluZ3NxAH4AC/RIjbh0AAl0ZXN0TmFtZXNzcQB+AAtGUgWvdAAPeWVPbGRlVGVzdE5hbWVzc3EAfgALiYrU13QAEWV4ZWN1dGUkZGVmYXVsdCQxc3EAfgALM5gSB3QAAiE9c3EAfgAL6cGNJXQAClR3ZWV0c1Rlc3RzcQB+AAswfV1bdAAIZ2V0Q2xhc3NzcQB+AAtc2S0+dAATcmVnaXN0ZXJJZ25vcmVkVGVzdHNxAH4AC7quJ4Z0AAh0ZXN0c0ZvcnNxAH4AC/BJ71F0AAhydW5UZXN0c3NxAH4AC3wD85N0ABFwZW5kaW5nVW50aWxGaXhlZHNxAH4AC44dkxJ0ABFleHBlY3RlZFRlc3RDb3VudHNxAH4AC7QkUPF0AAhyZXJ1bm5lcnNxAH4AC4U0MdZ0ACJjb252ZXJ0RXF1aXZhbGVuY2VUb0JUb0FDb25zdHJhaW50c3EAfgALXhjsOnQAAm5lc3EAfgALNIMIt3QAEUNoZWNraW5nRXF1YWxpemVyc3EAfgALJ8OFCnQAB3BlbmRpbmdzcQB+AAv5jz+EdAAGaWdub3Jlc3EAfgAL5v/TPHQAC21hY3JvQXNzZXJ0c3EAfgALNrmqUHQAAmVxc3EAfgALxcXxeHQAGmNvbnZlcnRUb0NoZWNraW5nRXF1YWxpemVyc3EAfgAL4DAaBHQACU5vQXJnVGVzdHNxAH4AC+jBuSd0AAIjI3NxAH4AC78oell0AAhmaW5hbGl6ZXNxAH4AC/VTSJl0AAZ0d2VldHNzcQB+AAvFhxr/dAAbY29udmVyc2lvbkNoZWNrZWRDb25zdHJhaW50c3EAfgALhsO3l3QACGhhc2hDb2Rlc3EAfgALkR4nrHQAB3N1aXRlSWRzcQB+AAs+4kKXdAAJc3VpdGVOYW1lc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4A43hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AAx4cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgCrdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAACdAAQc2NhbGEuZGVwcmVjYXRlZHQAJ3NjYWxhLnJlZmxlY3QubWFjcm9zLmludGVybmFsLm1hY3JvSW1wbHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgD8c3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AONMAAlpbmhlcml0ZWRxAH4A40wAB3BhcmVudHNxAH4A43hxAH4BAXNxAH4A/HVxAH4A3gAAAABzcQB+APx1cQB+AN4AAAAAc3EAfgD8dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAABBzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AAxMAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgEAdAAIRnVuU3VpdGVzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AQBzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgAMeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQAA29yZ3NxAH4BGXQACXNjYWxhdGVzdHNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgEac3EAfgENdAAMRnVuU3VpdGVMaWtlcQB+ARNzcQB+AQ10AAtEb2N1bWVudGluZ3EAfgETc3EAfgENdAAIQWxlcnRpbmdxAH4BE3NxAH4BDXQACU5vdGlmeWluZ3EAfgETc3EAfgENdAAJSW5mb3JtaW5ncQB+ARNzcQB+AQ10ABBUZXN0UmVnaXN0cmF0aW9ucQB+ARNzcQB+AQ10AAlUZXN0U3VpdGVxAH4BE3NxAH4BDXQABVN1aXRlcQB+ARNzcQB+AQ10AAxTZXJpYWxpemFibGVzcQB+ARFzcQB+ARR1cQB+ARcAAAACc3EAfgEZdAAFc2NhbGFxAH4BIHNxAH4BDXEAfgEyc3EAfgERc3EAfgEUdXEAfgEXAAAAA3NxAH4BGXQABGphdmFzcQB+ARl0AAJpb3EAfgEgc3EAfgENdAAKQXNzZXJ0aW9uc3EAfgETc3EAfgENdAAMVHJpcGxlRXF1YWxzc3EAfgERc3EAfgEUdXEAfgEXAAAAA3NxAH4BGXQAA29yZ3NxAH4BGXQACXNjYWxhY3RpY3EAfgEgc3EAfgENdAATVHJpcGxlRXF1YWxzU3VwcG9ydHEAfgFEc3EAfgENdAAGT2JqZWN0c3EAfgERc3EAfgEUdXEAfgEXAAAAA3NxAH4BGXEAfgE9c3EAfgEZdAAEbGFuZ3EAfgEgc3EAfgENdAADQW55cQB+ATN1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAHNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWhG2ucx1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AAxMAA9zb3VyY2VEaXJlY3RvcnlxAH4ADHhwdAA6RTpcc2NhbGFcdHdpdHRlci1hc3NpZ25tZW50XHRhcmdldFxzY2FsYS0yLjExXHRlc3QtY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFIA8S3gK82uaYiyHROoWEYSucFKA
external apis:
2 items
LikesAndRetweets -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwebSQUgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAlc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwloRp/HQABm5vdGlmeXNxAH4ADLpgOHR0AAR3YWl0c3EAfgAMygdlrXQADmNvcHkkZGVmYXVsdCQyc3EAfgAMP6opanQADSRhc0luc3RhbmNlT2ZzcQB+AAzP/enKdAAMcHJvZHVjdEFyaXR5c3EAfgAMuXLsB3QABmVxdWFsc3NxAH4ADGFVHu10AAxhc0luc3RhbmNlT2ZzcQB+AAxSKtqbdAAFdHdlZXRzcQB+AAykn7TpdAAMc3luY2hyb25pemVkc3EAfgAMnLegM3QADSRpc0luc3RhbmNlT2ZzcQB+AAzw4f5fdAAIY2FuRXF1YWxzcQB+AAzbMG48dAANcHJvZHVjdFByZWZpeHNxAH4ADAfl0HF0AAhyZXR3ZWV0c3NxAH4ADK+B9oJ0AAlub3RpZnlBbGxzcQB+AAwzMaS0dAAMaXNJbnN0YW5jZU9mc3EAfgAM/3dnMnQABWxpa2Vzc3EAfgAM+Rd1xHQABjxpbml0PnNxAH4ADMksaLB0AARkYXRlc3EAfgAMTcMyznQAAj09c3EAfgAMSaAyZnQAEExpa2VzQW5kUmV0d2VldHNzcQB+AAyfhYZwdAAFY2xvbmVzcQB+AAyLhFb7dAAGJGluaXQkc3EAfgAMF1HP8XQADmNvcHkkZGVmYXVsdCQzc3EAfgAMCPd2p3QABGNvcHlzcQB+AAwyELZHdAAIdG9TdHJpbmdzcQB+AAxbxDFPdAACIT1zcQB+AAw78jmPdAAITXlUd2VldHNzcQB+AAxWvKZudAAIZ2V0Q2xhc3NzcQB+AAwrD7FpdAAOY29weSRkZWZhdWx0JDFzcQB+AAy9yy6PdAACbmVzcQB+AAxwuo4adAAEdXNlcnNxAH4ADAeyJTp0AAJlcXNxAH4ADBN8LmN0AA9wcm9kdWN0SXRlcmF0b3JzcQB+AAzqL6TddAACIyNzcQB+AAxV7ndrdAAIZmluYWxpemVzcQB+AAxkqxC2dAAOcHJvZHVjdEVsZW1lbnRzcQB+AAzmr6JYdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBheHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAcQB+AEN1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AeHNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBhTAAJaW5oZXJpdGVkcQB+AGFMAAdwYXJlbnRzcQB+AGF4cQB+AH1zcQB+AHh1cQB+AFwAAAAAc3EAfgB4dXEAfgBcAAAAAHNxAH4AeHVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAAGc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AfHQADFNlcmlhbGl6YWJsZXNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AfHNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAAFc2NhbGFzcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AlnNxAH4AiXEAfgCMc3EAfgCNc3EAfgCQdXEAfgCTAAAAA3NxAH4AlXQABGphdmFzcQB+AJV0AAJpb3EAfgCac3EAfgCJdAAHUHJvZHVjdHEAfgCPc3EAfgCJdAAGRXF1YWxzcQB+AI9zcQB+AIl0AAZPYmplY3RzcQB+AI1zcQB+AJB1cQB+AJMAAAADc3EAfgCVcQB+AKBzcQB+AJV0AARsYW5ncQB+AJpzcQB+AIl0AANBbnlxAH4Aj3NxAH4AXnEAfgBrdXEAfgBsAAAAAHNxAH4AbgBxAH4ANXVxAH4AcAAAAABxAH4AdHVxAH4AdgAAAABzcQB+AHhxAH4AfnNxAH4AeHNxAH4AgHNxAH4AeHVxAH4AXAAAAABzcQB+AHh1cQB+AFwAAAAAc3EAfgB4dXEAfgCHAAAABnNxAH4AiXEAfgCMc3EAfgCNc3EAfgCQdXEAfgCTAAAAAnNxAH4AlXEAfgCYcQB+AJpzcQB+AIlxAH4AjHNxAH4AjXNxAH4AkHVxAH4AkwAAAANzcQB+AJVxAH4AoHNxAH4AlXQAAmlvcQB+AJpzcQB+AIlxAH4ApHEAfgDAc3EAfgCJdAAGRXF1YWxzcQB+AMBzcQB+AIlxAH4AqHNxAH4AjXNxAH4AkHVxAH4AkwAAAANzcQB+AJVxAH4AoHNxAH4AlXEAfgCucQB+AJpzcQB+AIlxAH4AsHEAfgDAdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVoRtp5FdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQANUU6XHNjYWxhXHR3aXR0ZXItYXNzaWdubWVudFx0YXJnZXRcc2NhbGEtMi4xMVxjbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAULXLqqVeZXZGvavoJiFM9gTyws3E=
Tweets -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwPeB4cgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAbc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw/sXQ7XQABm5vdGlmeXNxAH4ADCuEa4x0ABNnZXRMaWtlc0FuZFJlVHdlZXRzc3EAfgAM235V43QABHdhaXRzcQB+AAxUhYtEdAANJGFzSW5zdGFuY2VPZnNxAH4ADNpHxVR0ABpnZXRBdmVyYWdlTGlrZXNBbmRSZXR3ZWV0c3NxAH4ADHOTNht0AAZlcXVhbHNzcQB+AAyBpBVzdAAMYXNJbnN0YW5jZU9mc3EAfgAMRJuKCHQADHN5bmNocm9uaXplZHNxAH4ADC+yHwl0AAlnZXRUd2VldHNzcQB+AAwqtQL7dAANJGlzSW5zdGFuY2VPZnNxAH4ADO38nkh0AAZUd2VldHNzcQB+AAwG67WVdAAJbm90aWZ5QWxsc3EAfgAMP68p0XQADGlzSW5zdGFuY2VPZnNxAH4ADLF6Ue10AAY8aW5pdD5zcQB+AAwL998NdAAOcmV0cmlldmVUd2VldHNzcQB+AAxNFJ3LdAALY291bnRUd2VldHNzcQB+AAyrhGMtdAACPT1zcQB+AAxGOnHkdAAFY2xvbmVzcQB+AAwzT11CdAAIdG9TdHJpbmdzcQB+AAwEmY4+dAACIT1zcQB+AAwHB0ntdAAIZ2V0Q2xhc3NzcQB+AAwSpl92dAACbmVzcQB+AAx5fUZVdAACZXFzcQB+AAwt7BemdAADbG9nc3EAfgAMo8MQjHQAAiMjc3EAfgAM3pz/6nQACGZpbmFsaXplc3EAfgAMAeduv3QACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4ATXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgAjdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AGRzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4ATUwACWluaGVyaXRlZHEAfgBNTAAHcGFyZW50c3EAfgBNeHEAfgBpc3EAfgBkdXEAfgBIAAAAAHNxAH4AZHVxAH4ASAAAAABzcQB+AGR1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGh0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGhzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AIF0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AIJzcQB+AHV0AANBbnlzcQB+AHlzcQB+AHx1cQB+AH8AAAACc3EAfgCBdAAFc2NhbGFxAH4AiHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAAc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFaEbaeRXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADVFOlxzY2FsYVx0d2l0dGVyLWFzc2lnbm1lbnRcdGFyZ2V0XHNjYWxhLTIuMTFcY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFEvY3IikrZWk9GhUa/ZEyZ4Yso8k
source infos:
1 items
E:\scala\twitter-assignment\src\test\scala\TweetsTest.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWhG2ucx1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAOkU6XHNjYWxhXHR3aXR0ZXItYXNzaWdubWVudFx0YXJnZXRcc2NhbGEtMi4xMVx0ZXN0LWNsYXNzZXN0AAEv
